//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1022
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace My.IoC {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("My.IoC.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A brief descrption of the requested service is:.
        /// </summary>
        internal static string BriefDescriptionOfTheRequestedServiceIs {
            get {
                return ResourceManager.GetString("BriefDescriptionOfTheRequestedServiceIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not find a qualified constructor for the dynamic type {0}!.
        /// </summary>
        internal static string CanNotFoundQualifiedConstructorForDynamicType {
            get {
                return ResourceManager.GetString("CanNotFoundQualifiedConstructorForDynamicType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can not get a valid assembly file name!.
        /// </summary>
        internal static string CanNotGetValidAssemblyFileName {
            get {
                return ResourceManager.GetString("CanNotGetValidAssemblyFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cyclic dependency found while building an instance for type {0}!.
        /// </summary>
        internal static string CyclicDependencyFoundWhileBuildingInstanceForType {
            get {
                return ResourceManager.GetString("CyclicDependencyFoundWhileBuildingInstanceForType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The declaring type of the provided constructor is not an Exception, nor does it derive from Exception!.
        /// </summary>
        internal static string DeclaringTypeIsNotExceptionOrDerivedFromException {
            get {
                return ResourceManager.GetString("DeclaringTypeIsNotExceptionOrDerivedFromException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When registering an instance, the lifetime can only be {0} or one of the type that derive from it, while the provided type is {1}!.
        /// </summary>
        internal static string InstanceCanOnlyBeRegisteredInSingletonLifetime {
            get {
                return ResourceManager.GetString("InstanceCanOnlyBeRegisteredInSingletonLifetime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid assembly file name: .
        /// </summary>
        internal static string InvalidAssemblyFileName {
            get {
                return ResourceManager.GetString("InvalidAssemblyFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid directory path: .
        /// </summary>
        internal static string InvalidDirectoryPath {
            get {
                return ResourceManager.GetString("InvalidDirectoryPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid file name: .
        /// </summary>
        internal static string InvalidFileName {
            get {
                return ResourceManager.GetString("InvalidFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The [{0}th] parameter provided for the selected constructor of the type [{1}] is of type [{2}], which is not autowirable and must be explicitly specified!.
        /// </summary>
        internal static string NonautowirableParameterNotSpecified {
            get {
                return ResourceManager.GetString("NonautowirableParameterNotSpecified", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No object registrations found for the contract type {0}!.
        /// </summary>
        internal static string NoObjectRegistrationsFoundForContractType {
            get {
                return ResourceManager.GetString("NoObjectRegistrationsFoundForContractType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An ObjectBuilder registered with type {0} can not be found!.
        /// </summary>
        internal static string ObjectBuilderRegisteredWithTypeCanNotBeFound {
            get {
                return ResourceManager.GetString("ObjectBuilderRegisteredWithTypeCanNotBeFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The [{0}] can not be null!.
        /// </summary>
        internal static string ObjectCanNotBeNull {
            get {
                return ResourceManager.GetString("ObjectCanNotBeNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A parameter of type {0} is not autowirable, which can not be determined by the container automatically, and should be explicitly provided with a value!.
        /// </summary>
        internal static string ParameterIsNotAutowirableAndShouldExplicitlyProvideAValue {
            get {
                return ResourceManager.GetString("ParameterIsNotAutowirableAndShouldExplicitlyProvideAValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of parameters provided for the selected constructor of the type [{0}] exceeds what is needed! The maximum acceptable number of parameters is [{1}], while the provided number is [{2}]!.
        /// </summary>
        internal static string ParameterNumberExceeds {
            get {
                return ResourceManager.GetString("ParameterNumberExceeds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of parameters passed to build a object instance is wrong! The constructor needs {0} parameter(s), while {1} parameter(s) was provided!.
        /// </summary>
        internal static string ParameterNumberIsWrong {
            get {
                return ResourceManager.GetString("ParameterNumberIsWrong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No parameters is needed for the selected constructor of type [{0}], while there were parameters provided!.
        /// </summary>
        internal static string RedundantParametersProvided {
            get {
                return ResourceManager.GetString("RedundantParametersProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One parameter of the selected constructor for type [{0}] is of [{1}], this parameter is not autowirable and needs to explicitly specify a value, while no value has been provided for it at the time of registration!.
        /// </summary>
        internal static string RequiredParameterNotProvided {
            get {
                return ResourceManager.GetString("RequiredParameterNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The [{0}] can not be null or empty!.
        /// </summary>
        internal static string StringCanNotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("StringCanNotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied type [{0}] is not assignable from the open generic type {1}..
        /// </summary>
        internal static string SuppliedTypeIsNotAssignableFromOpenGenericType {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotAssignableFromOpenGenericType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied type [{0}] is not assignable from type {1}..
        /// </summary>
        internal static string SuppliedTypeIsNotAssignableFromType {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotAssignableFromType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied type [{0}] is not a autowirable type. An autowirable type is a reference type and can not be System.Type or System.String!.
        /// </summary>
        internal static string SuppliedTypeIsNotAutowirable {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotAutowirable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied type [{0}] is not a concrete type!.
        /// </summary>
        internal static string SuppliedTypeIsNotConcreteType {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotConcreteType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied type [{0}] is not an open generic type!.
        /// </summary>
        internal static string SuppliedTypeIsNotOpenGeneric {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotOpenGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied type [{0}] is not a public type!.
        /// </summary>
        internal static string SuppliedTypeIsNotPublicType {
            get {
                return ResourceManager.GetString("SuppliedTypeIsNotPublicType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied type [{0}] is an open generic type..
        /// </summary>
        internal static string SuppliedTypeIsOpenGeneric {
            get {
                return ResourceManager.GetString("SuppliedTypeIsOpenGeneric", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The supplied type [{0}] is supposed to have one generic argument only!.
        /// </summary>
        internal static string SuppliedTypeSupposedToHaveOneGenericArgsOnly {
            get {
                return ResourceManager.GetString("SuppliedTypeSupposedToHaveOneGenericArgsOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The call path is:.
        /// </summary>
        internal static string TheCallPathIs {
            get {
                return ResourceManager.GetString("TheCallPathIs", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use [LoadThis] method instead if you want to load [this]!.
        /// </summary>
        internal static string UseLoadThisMethodInstead {
            get {
                return ResourceManager.GetString("UseLoadThisMethodInstead", resourceCulture);
            }
        }
    }
}
